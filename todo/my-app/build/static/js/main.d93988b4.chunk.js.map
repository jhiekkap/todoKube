{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["console","log","process","host","App","useState","newTodo","setNewTodo","todos","setTodos","useEffect","axios","get","then","dbTodos","data","catch","err","handleSubmit","a","post","response","className","src","alt","style","width","height","onSubmit","e","preventDefault","value","onChange","target","type","maxLength","disabled","map","todo","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAIAA,QAAQC,IAAI,qBAAgBC,cAE5B,IAAMC,EAAsD,mBAqD7CC,MAnDf,WAAgB,IAAD,EACiBC,mBAAiB,IADlC,mBACNC,EADM,KACGC,EADH,OAEaF,mBAAmB,IAFhC,mBAENG,EAFM,KAECC,EAFD,KAIbC,qBAAU,WACRC,IAAMC,IAAIT,EAAO,eACdU,MAAK,SAACC,GAAD,OAAkBL,EAASK,EAAQC,SACxCC,OAAM,SAACC,GAAD,OAASjB,QAAQC,IAAIgB,QAC7B,IAEH,IAAMC,EAAY,uCAAG,4BAAAC,EAAA,6DACnBnB,QAAQC,IAAI,oBAAqBK,GADd,kBAGMK,IAAMS,KAAKjB,EAAO,cAAe,CAAEG,YAHzC,OAGXe,EAHW,OAIjBZ,EAASY,EAASN,MAClBR,EAAW,IALM,gDAOjBP,QAAQC,IAAI,oBAAZ,MAPiB,yDAAH,qDAYlB,OACE,sBAAKqB,UAAU,MAAf,UACE,qBAAKC,IAAKpB,EAAO,yBAA0BqB,IAAI,aAAaC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,SAC3F,sBAAMC,SAAU,SAACC,GACf7B,QAAQC,IAAI,YACZ4B,EAAEC,iBACFZ,KAHF,SAKE,iCACE,uBACEa,MAAOzB,EACP0B,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB1B,EAAW0B,EAAOF,QAC5CG,KAAK,OACLC,UAAW,MAEb,wBACED,KAAK,SACLE,SAAsB,KAAZ9B,EAFZ,8BAOJ,6BACGE,EAAM6B,KAAI,SAACC,EAAMC,GAAP,OAAa,6BAAaD,GAAJC,YCvC1BC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d93988b4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconsole.log('Ympäristö on', process.env.NODE_ENV);\n\nconst host = /* process.env.NODE_ENV === 'development' ?  */'http://localhost'/*  : '10.3.248.128'; */\n\nfunction App() {\n  const [newTodo, setNewTodo] = useState<string>('');\n  const [todos, setTodos] = useState<string[]>([]);\n\n  useEffect(() => {\n    axios.get(host + ':3001/todos')\n      .then((dbTodos: any) => setTodos(dbTodos.data))\n      .catch((err) => console.log(err));\n  }, [])\n\n  const handleSubmit = async () => {\n    console.log('Saving new todo: ', newTodo);\n    try {\n      const response = await axios.post(host + ':3001/todos', { newTodo });\n      setTodos(response.data);\n      setNewTodo('');\n    } catch (err) {\n      console.log('Save todo error: ', err);\n    }\n\n  };\n\n  return (\n    <div className=\"App\">\n      <img src={host + ':3001/images/image.jpg'} alt=\"pic of day\" style={{ width: '50%', height: '50%' }} />\n      <form onSubmit={(e) => {\n        console.log('HELLOUTA')\n        e.preventDefault();\n        handleSubmit()\n      }}>\n        <span>\n          <input\n            value={newTodo}\n            onChange={({ target }) => setNewTodo(target.value)}\n            type='text'\n            maxLength={140}\n          />\n          <button\n            type=\"submit\"\n            disabled={newTodo === ''}>\n            Create TODO\n            </button>\n        </span>\n      </form>\n      <ul>\n        {todos.map((todo, i) => <li key={i}>{todo}</li>)}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}